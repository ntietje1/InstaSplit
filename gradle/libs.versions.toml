[versions]
accompanistPermissions = "0.35.0-alpha"
activityCompose = "1.8.2"
cameraX = "1.3.2"
coreKtx = "1.12.0"
junit = "4.13.2"
junitVersion = "1.1.5"
kotlinxCoroutinesTest = "1.7.3"
lifecycleViewmodelKtx = "2.7.0"
compose-navigation = "2.7.7"
compose = "1.6.5"
kotlinCompilerExtension = "1.5.11"
material3 = "1.2.1"
androidPlugin = "8.3.2"
kotlinAndroidPlugin = "1.9.23"
mockk = "1.12.0"
mockkAndroid = "1.11.0"
mockwebserver = "4.9.3"
retrofit = "2.9.0"
runner = "1.5.2"
textRecognition = "16.0.0"
room = "2.6.1"
ksp = "1.9.23-1.0.19"
glide = "4.16.0"
truth = "1.1.3"
turbine = "0.7.0"
robolectric = "4.12"
coreTesting = "2.2.0"

[libraries]
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraX" }
androidx-camera-extensions = { module = "androidx.camera:camera-extensions", version.ref = "cameraX" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraX" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "cameraX" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "junitVersion" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleViewmodelKtx" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleViewmodelKtx" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleViewmodelKtx" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtx" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycleViewmodelKtx" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
androidx-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }
androidx-runner = { module = "androidx.test:runner", version.ref = "runner" }
androidx-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
androidx-ui-graphics = { module = "androidx.compose.ui:ui-graphics", version.ref = "compose" }
androidx-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
androidx-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
androidx-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "compose-navigation" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
junit = { module = "junit:junit", version.ref = "junit" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockkAndroid" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
text-recognition = { module = "com.google.mlkit:text-recognition", version.ref = "textRecognition" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
glide-core = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
coreTesting = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }


[plugins]
android-application = { id = "com.android.application", version.ref = "androidPlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version .ref = "kotlinAndroidPlugin"}
google-devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }



